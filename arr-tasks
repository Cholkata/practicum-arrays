#include <iostream>

void enterArr(int arr[], int size) // za vsicki zadachi
{
	for (int i = 0; i < size; i++)
	{
		std::cin >> arr[i];
	}
}


void printArr(int arr[], int size) // za vsichki zadachi bez zad 0
{
	for (int i = 0; i < size; i++)
	{
		std::cout << arr[i];
	}
}

bool ArrayWithTwoZeroes(int arr[], int size) // 2 zad 
{
	for (int i = 0; i < size - 1; i++)
	{
		if (arr[i] == 0 && arr[i + 1] == 0)
			return true;
	}
	return false;
}

int getFirstPositive(int arr[], int size) // zad 3
{
	for (int i = 0; i < size; i++)
	{
		if (arr[i] > 0)
			return arr[i];
	}
	return -1;
}

int getSumAfterFirstPositive(int arr[], int size) // zad 3
{
	double sum = 0;
	if (!getFirstPositive(arr, size))
	{
		return sum;
	}
	bool foundPositive = false;
	for (int i = 0; i < size; i++)
	{
		if (foundPositive)
			sum += arr[i];
		if (arr[i] > 0)
			foundPositive = true;
	}
	return sum;
}

void reverseArr(int arr[], int size) // 4 zad
{
	int i = 0;
	int j = 0;
	int temp;
	while (i < size / 2)
	{
		temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
		i++;
		j--;
	}

}


void enterString(char string[], const int length) // zad 5
{
	std::cout << "Enter the elements of the array: " << std::endl;
	int i;
	for (i = 0; i < length; i++)
	{
		std::cin >> string[i];
	}
	string[i] = '\0';
}

int replaceCharacterAndGetRepeatingCount(char string[], const int length, const char character) // zad 5
{
	int counter = 0;
	for (int i = 0; i < length; i++)
	{
		if (string[i] == character)
		{
			counter++;
			string[i] = '*';
		}
	}
	return counter;
}

bool isArrayMirrored (int arr[], int size) // 6 zad 
{
	int halfSize = size / 2;
	for (int i = 0; i < halfSize; i++)
	{
		if (arr[i] != arr[size - i - 1])
			return false;
	}
	return true;
}


int main()
{
	
	int arr[100]; // zad 0
	int size;
	std::cout << "Array size: ";
	std::cin >> size;
	std::cout << "Array elements: ";
	enterArray(arr,size);
	int min = arr[0];
	int max = arr[0];
	int minIndex = 0;
	int maxIndex = 0;
	for (int i = 0; i < size; i++)

		if (arr[i] < min)
		{
			min = arr[i];
			minIndex = i;
		}
		if (arr[i] > max)
		{
			max = arr[i];
			maxIndex = i;
		}
	}
	std::cout << "The max value is: " << maxEl << " Index: " << maxIndex << std::endl;
	std::cout << "The min value is: " << minEl << " Index: " << minIndex << std::endl;

	int arr[100]; // zad 1
	int size;
	std::cout << "Array size: ";
	std::cin >> size;
	std::cout << "Array elements: ";
	enterArray(arr,size);
	int min = arr[0];
	int max = arr[0];
	int minIndex = 0;
	int maxIndex = 0;
	for (int i = 0; i < size; i++) 
	
		if (arr[i] < min)
		{
			min = arr[i];
			minIndex = i;
		}
		if (arr[i] > max)
		{
			max = arr[i];
			maxIndex = i;
		}
	}
	arr[minIndex] = max;
	arr[maxIndex] = min;
	printArr(arr, size);

	int arr[100]; // zad 2
	int size;
	std::cout << "Array size: ";
	std::cin >> size;
	std::cout << "Array elements: ";
	enterArray(arr,size);
	std::cout << std::boolalpha << ArrayWithTwoZeroes(arr,size);

	/*int arr[100]; // zad 3
	int size;
	std::cout << "Array size: ";
	std::cin >> size;
	std::cout << "Array elements: ";
	enterArray(arr, size);
	int firstPositive = getFirstPositive(arr, size); 
	if (firstPositive > 0)
	{
		int sumAfterPositive = getSumAfterFirstPositive(arr, size);
		std::cout << "The first positive number is: " << firstPositive << std::endl;
		std::cout << "And the sum of the numbers after it is: " << sumAfterPositive << std::endl;
	}
	else
	{
		std::cout << "No positive numbers in this array!" << std::endl;
	}


	int arr[100]; // zad 4
	int size;
	std::cout << "Size of array: ";
	std::cin >> size;
	std::cout << "Array's elements: ";
	enterArray(arr, size);
	reverseArray(arr, size);
	printArray(arr, size);


	int userLength; // zad 5
	char character;
	char string[101];
	std::cout << "How many characters would you want to enter between 1 to 100: ";
	do
	{
		std::cin >> userLength;
	} while (userLength < 1 || userLength > 100);
	enterString(string, userLength);
	std::cout << string << std::endl;
	std::cout << "Which character do you want to replace: ";
	std::cin >> character;
	int repCounter = replaceCharacterAndGetRepeatingCount(string, userLength, character);
	std::cout << "The character " << character << " is repeated " << repCounter << " times." << std::endl;
	std::cout << string << std::endl;

	int arr[100]; // zad 6
	int size;
	std::cout << "Enter a size of the array: ";
	std::cin >> size;
	std::cout << "Enter elements of the array:";
	enterArr(arr, size);
	std::cout << std::boolalpha << "Is array mirrored: " << isArrayMirrored(arr, size);
}

